{"ast":null,"code":"var _jsxFileName = \"/Users/jding/awap-viewer-2023-1/awap-viewer-2023-main/my-app/src/components/SidePanel/TerraformChart.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport Chart from 'react-google-charts';\nimport { ViewerContext } from '../../pages/Viewer';\n\n/*\r\n  [0, 0, 0],\r\n  [1, 10, 5],\r\n  [2, 23, 15],\r\n  [3, 17, 9],\r\n  [4, 18, 10],\r\n  [5, 9, 5],\r\n  [6, 11, 3],\r\n  [7, 27, 19],\r\n  [8, 27, 200],\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChartOptions = {\n  //title: \"Metal Reserves\",\n  //backgroundColor: '#F9B697',\n  //title: 'Company Performance',\n  //subtitle: 'Sales, Expenses, and Profit: 2014-2017',\n\n  'chartArea': {\n    'backgroundColor': {\n      'fill': '#F4F4F4',\n      'opacity': 100\n    }\n  },\n  titleTextStyle: {\n    fontName: \"Impact\",\n    fontSize: 20\n  },\n  hAxis: {\n    title: 'Frame',\n    titleTextStyle: {\n      fontName: \"Roboto\",\n      fontStyle: \"bold\",\n      //or bold, italic, etc.\n      italic: false,\n      fontSize: 12\n      //color: '#ff0000'\n    }\n  },\n\n  vAxis: {\n    title: 'Terraformed Tiles',\n    titleTextStyle: {\n      fontName: \"Roboto\",\n      fontStyle: \"bold\",\n      //or bold, italic, etc.\n      italic: false,\n      fontSize: 12\n      //color: '#ff0000'\n    },\n\n    viewWindow: {\n      min: 0\n    }\n  },\n  series: {\n    1: {\n      curveType: 'function'\n    }\n  }\n};\nfunction TerraformChart() {\n  _s();\n  const {\n    frame,\n    setFrame,\n    redTerraform,\n    blueTerraform,\n    setRedTerraform,\n    setBlueTerraform,\n    framePlaying,\n    replay,\n    sliderValue\n  } = useContext(ViewerContext);\n\n  // console.log(\"frame \" + frame)\n\n  var totalFrame = 0;\n  if (replay != null) {\n    totalFrame = replay.turns.length - 1;\n  }\n  var slideVal = 0;\n  if (sliderValue == -1) {\n    slideVal = 0;\n  } else {\n    slideVal = sliderValue;\n  }\n  // var frameCurr = frame\n  // if ((frame - parseInt(frame)) != 0) {\n  //   console.log(\"parseInt\" + parseInt(frame))\n  //   console.log(frame - parseInt(frame))\n  // }\n\n  //LineData.push(['Frame', 'Blue Team', 'Red Team'])\n  //LineData.push([0,0,0])\n  // console.log(\"newLineData: \" + newLineData)\n\n  // console.log(\"redMetal: \" + redMetal\n  // console.log(framePlaying)\n  const LineData = [['Frame', 'Blue Team', 'Red Team'], [0, 0, 0]];\n  for (let i = 0; i < frame; i++) {\n    const temp = [];\n    temp.push(i);\n    temp.push(blueTerraform[i]);\n    temp.push(redTerraform[i]);\n    LineData.push(temp);\n  }\n\n  // console.log(\"LineChart: \" + LineData)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" Frame: \", slideVal, \" / \", totalFrame]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Terraform Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '350px',\n      height: '250px',\n      chartType: \"LineChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this),\n      data: LineData,\n      options: LineChartOptions,\n      rootProps: {\n        'data-testid': '3'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n_s(TerraformChart, \"z+9p77waQmgnUfnVKtRYbJsQ4TY=\");\n_c = TerraformChart;\nexport default TerraformChart;\n\n//<h1>{redMetal}</h1>\nvar _c;\n$RefreshReg$(_c, \"TerraformChart\");","map":{"version":3,"names":["React","useContext","Chart","ViewerContext","LineChartOptions","titleTextStyle","fontName","fontSize","hAxis","title","fontStyle","italic","vAxis","viewWindow","min","series","curveType","TerraformChart","frame","setFrame","redTerraform","blueTerraform","setRedTerraform","setBlueTerraform","framePlaying","replay","sliderValue","totalFrame","turns","length","slideVal","LineData","i","temp","push"],"sources":["/Users/jding/awap-viewer-2023-1/awap-viewer-2023-main/my-app/src/components/SidePanel/TerraformChart.js"],"sourcesContent":["import React, {\r\n    useContext,\r\n  } from \"react\"\r\n  \r\n  import Chart from 'react-google-charts'\r\n  import { ViewerContext } from '../../pages/Viewer'\r\n  \r\n  \r\n  \r\n  /*\r\n    [0, 0, 0],\r\n    [1, 10, 5],\r\n    [2, 23, 15],\r\n    [3, 17, 9],\r\n    [4, 18, 10],\r\n    [5, 9, 5],\r\n    [6, 11, 3],\r\n    [7, 27, 19],\r\n    [8, 27, 200],\r\n  */ \r\n  \r\n  \r\n  const LineChartOptions = {\r\n    //title: \"Metal Reserves\",\r\n    //backgroundColor: '#F9B697',\r\n    //title: 'Company Performance',\r\n    //subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n  \r\n    'chartArea': {\r\n        'backgroundColor': {\r\n            'fill': '#F4F4F4',\r\n            'opacity': 100,\r\n        },\r\n    },\r\n  \r\n    titleTextStyle:{\r\n        fontName: \"Impact\",\r\n        fontSize: 20,\r\n    },\r\n    hAxis: {\r\n        title: 'Frame',\r\n        titleTextStyle:\r\n        {\r\n         fontName: \"Roboto\",\r\n         fontStyle: \"bold\", //or bold, italic, etc.\r\n         italic: false,\r\n         fontSize: 12,\r\n         //color: '#ff0000'\r\n        },\r\n    },\r\n  vAxis: {\r\n    title: 'Terraformed Tiles',\r\n    titleTextStyle:\r\n    {\r\n     fontName: \"Roboto\",\r\n     fontStyle: \"bold\", //or bold, italic, etc.\r\n     italic: false,\r\n     fontSize: 12,\r\n     //color: '#ff0000'\r\n    },\r\n    viewWindow: {\r\n      min: 0\r\n    }\r\n  },\r\n  series: {\r\n    1: { curveType: 'function' },\r\n  },\r\n  }\r\n  \r\n  \r\n  function TerraformChart (){\r\n      const {\r\n        frame,\r\n        setFrame,\r\n        redTerraform,\r\n        blueTerraform,\r\n        setRedTerraform,\r\n        setBlueTerraform,\r\n        framePlaying,\r\n        replay,\r\n        sliderValue\r\n      } = useContext(ViewerContext)\r\n  \r\n  \r\n      // console.log(\"frame \" + frame)\r\n\r\n      var totalFrame = 0\r\n      if(replay != null){\r\n        totalFrame = replay.turns.length - 1\r\n      }\r\n\r\n      var slideVal = 0 \r\n      if (sliderValue == -1) {\r\n        slideVal = 0\r\n      } else {\r\n        slideVal = sliderValue\r\n      }\r\n      // var frameCurr = frame\r\n      // if ((frame - parseInt(frame)) != 0) {\r\n      //   console.log(\"parseInt\" + parseInt(frame))\r\n      //   console.log(frame - parseInt(frame))\r\n      // }\r\n      \r\n      //LineData.push(['Frame', 'Blue Team', 'Red Team'])\r\n      //LineData.push([0,0,0])\r\n      // console.log(\"newLineData: \" + newLineData)\r\n  \r\n      // console.log(\"redMetal: \" + redMetal\r\n      // console.log(framePlaying)\r\n      const LineData = [\r\n        ['Frame', 'Blue Team', 'Red Team'],\r\n        [0, 0, 0]\r\n      ]\r\n  \r\n      for(let i = 0; i < frame; i++){\r\n        const temp = []\r\n        temp.push(i)\r\n        temp.push(blueTerraform[i])\r\n        temp.push(redTerraform[i])\r\n        LineData.push(temp)\r\n      }\r\n  \r\n      // console.log(\"LineChart: \" + LineData)\r\n  \r\n  \r\n      return (\r\n        <div className=\"container mt-5\">\r\n          <h1> Frame: {slideVal} / {totalFrame}</h1>\r\n          \r\n          <h1>Terraform Graph</h1>\r\n          <Chart\r\n            width={'350px'}\r\n            height={'250px'}\r\n            chartType=\"LineChart\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={LineData}\r\n            options={LineChartOptions}\r\n            rootProps={{ 'data-testid': '3' }}\r\n          />\r\n        </div>\r\n      )\r\n    \r\n  }\r\n  export default TerraformChart\r\n  \r\n  //<h1>{redMetal}</h1>\r\n          \r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}