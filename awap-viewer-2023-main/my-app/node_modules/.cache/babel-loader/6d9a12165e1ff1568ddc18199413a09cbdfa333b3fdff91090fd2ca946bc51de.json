{"ast":null,"code":"var _jsxFileName = \"/Users/jding/awap-viewer-2023-1/awap-viewer-2023-main/my-app/src/components/SidePanel/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport Chart from 'react-google-charts';\nimport { ViewerContext } from '../../pages/Viewer';\n\n/*\r\n  [0, 0, 0],\r\n  [1, 10, 5],\r\n  [2, 23, 15],\r\n  [3, 17, 9],\r\n  [4, 18, 10],\r\n  [5, 9, 5],\r\n  [6, 11, 3],\r\n  [7, 27, 19],\r\n  [8, 27, 200],\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChartOptions = {\n  //title: \"Metal Reserves\",\n  //backgroundColor: '#F9B697',\n  //title: 'Company Performance',\n  //subtitle: 'Sales, Expenses, and Profit: 2014-2017',\n\n  'chartArea': {\n    'backgroundColor': {\n      'fill': '#F4F4F4',\n      'opacity': 100\n    }\n  },\n  titleTextStyle: {\n    fontName: \"Impact\",\n    fontSize: 20\n  },\n  hAxis: {\n    title: 'Frame',\n    titleTextStyle: {\n      fontName: \"Roboto\",\n      fontStyle: \"bold\",\n      //or bold, italic, etc.\n      italic: false,\n      fontSize: 12\n      //color: '#ff0000'\n    }\n  },\n\n  vAxis: {\n    title: 'Metal',\n    titleTextStyle: {\n      fontName: \"Roboto\",\n      fontStyle: \"bold\",\n      //or bold, italic, etc.\n      italic: false,\n      fontSize: 12\n      //color: '#ff0000'\n    },\n\n    viewWindow: {\n      min: 0\n    }\n  },\n  series: {\n    1: {\n      curveType: 'function'\n    }\n  }\n};\nfunction LineChart() {\n  _s();\n  const {\n    frame,\n    setFrame,\n    redMetal,\n    blueMetal,\n    setRedMetal,\n    setBlueMetal\n  } = useContext(ViewerContext);\n\n  // console.log(\"frame \" + frame)\n  //LineData.push(['Frame', 'Blue Team', 'Red Team'])\n  //LineData.push([0,0,0])\n  // console.log(\"newLineData: \" + newLineData)\n\n  // console.log(\"redMetal: \" + redMetal)\n\n  const LineData = [['Frame', 'Blue Team', 'Red Team'], [0, 0, 0]];\n  for (let i = 0; i < frame; i++) {\n    const temp = [];\n    temp.push(i);\n    temp.push(blueMetal[i]);\n    temp.push(redMetal[i]);\n    LineData.push(temp);\n  }\n\n  // console.log(\"LineChart: \" + LineData)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Metal Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '350px',\n      height: '250px',\n      chartType: \"LineChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }, this),\n      data: LineData,\n      options: LineChartOptions,\n      rootProps: {\n        'data-testid': '3'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n}\n_s(LineChart, \"pJ5gqx17ZiHEVrisvIU1EY4BOwQ=\");\n_c = LineChart;\nexport default LineChart;\n\n//<h1>{redMetal}</h1>\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useContext","Chart","ViewerContext","LineChartOptions","titleTextStyle","fontName","fontSize","hAxis","title","fontStyle","italic","vAxis","viewWindow","min","series","curveType","LineChart","frame","setFrame","redMetal","blueMetal","setRedMetal","setBlueMetal","LineData","i","temp","push"],"sources":["/Users/jding/awap-viewer-2023-1/awap-viewer-2023-main/my-app/src/components/SidePanel/LineChart.js"],"sourcesContent":["import React, {\r\n  useContext,\r\n} from \"react\"\r\n\r\nimport Chart from 'react-google-charts'\r\nimport { ViewerContext } from '../../pages/Viewer'\r\n\r\n\r\n\r\n/*\r\n  [0, 0, 0],\r\n  [1, 10, 5],\r\n  [2, 23, 15],\r\n  [3, 17, 9],\r\n  [4, 18, 10],\r\n  [5, 9, 5],\r\n  [6, 11, 3],\r\n  [7, 27, 19],\r\n  [8, 27, 200],\r\n*/ \r\n\r\n\r\nconst LineChartOptions = {\r\n  //title: \"Metal Reserves\",\r\n  //backgroundColor: '#F9B697',\r\n  //title: 'Company Performance',\r\n  //subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n\r\n  'chartArea': {\r\n      'backgroundColor': {\r\n          'fill': '#F4F4F4',\r\n          'opacity': 100,\r\n      },\r\n  },\r\n\r\n  titleTextStyle:{\r\n      fontName: \"Impact\",\r\n      fontSize: 20,\r\n  },\r\n  hAxis: {\r\n      title: 'Frame',\r\n      titleTextStyle:\r\n      {\r\n       fontName: \"Roboto\",\r\n       fontStyle: \"bold\", //or bold, italic, etc.\r\n       italic: false,\r\n       fontSize: 12,\r\n       //color: '#ff0000'\r\n      },\r\n  },\r\nvAxis: {\r\n  title: 'Metal',\r\n  titleTextStyle:\r\n  {\r\n   fontName: \"Roboto\",\r\n   fontStyle: \"bold\", //or bold, italic, etc.\r\n   italic: false,\r\n   fontSize: 12,\r\n   //color: '#ff0000'\r\n  },\r\n  viewWindow: {\r\n    min: 0\r\n  }\r\n},\r\nseries: {\r\n  1: { curveType: 'function' },\r\n},\r\n}\r\n\r\n\r\nfunction LineChart (){\r\n    const {\r\n      frame,\r\n      setFrame,\r\n      redMetal,\r\n      blueMetal,\r\n      setRedMetal,\r\n      setBlueMetal\r\n    } = useContext(ViewerContext)\r\n\r\n\r\n    // console.log(\"frame \" + frame)\r\n    //LineData.push(['Frame', 'Blue Team', 'Red Team'])\r\n    //LineData.push([0,0,0])\r\n    // console.log(\"newLineData: \" + newLineData)\r\n\r\n    // console.log(\"redMetal: \" + redMetal)\r\n\r\n\r\n    const LineData = [\r\n      ['Frame', 'Blue Team', 'Red Team'],\r\n      [0, 0, 0]\r\n    ]\r\n\r\n    for(let i = 0; i < frame; i++){\r\n      const temp = []\r\n      temp.push(i)\r\n      temp.push(blueMetal[i])\r\n      temp.push(redMetal[i])\r\n      LineData.push(temp)\r\n    }\r\n\r\n    // console.log(\"LineChart: \" + LineData)\r\n\r\n\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <h1>Metal Graph</h1>\r\n        \r\n        <Chart\r\n          width={'350px'}\r\n          height={'250px'}\r\n          chartType=\"LineChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={LineData}\r\n          options={LineChartOptions}\r\n          rootProps={{ 'data-testid': '3' }}\r\n        />\r\n      </div>\r\n    )\r\n  \r\n}\r\nexport default LineChart\r\n\r\n//<h1>{redMetal}</h1>\r\n        \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IACVC,UAAU,QACL,OAAO;AAEd,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,aAAa,QAAQ,oBAAoB;;AAIlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA,MAAMC,gBAAgB,GAAG;EACvB;EACA;EACA;EACA;;EAEA,WAAW,EAAE;IACT,iBAAiB,EAAE;MACf,MAAM,EAAE,SAAS;MACjB,SAAS,EAAE;IACf;EACJ,CAAC;EAEDC,cAAc,EAAC;IACXC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE;EACd,CAAC;EACDC,KAAK,EAAE;IACHC,KAAK,EAAE,OAAO;IACdJ,cAAc,EACd;MACCC,QAAQ,EAAE,QAAQ;MAClBI,SAAS,EAAE,MAAM;MAAE;MACnBC,MAAM,EAAE,KAAK;MACbJ,QAAQ,EAAE;MACV;IACD;EACJ,CAAC;;EACHK,KAAK,EAAE;IACLH,KAAK,EAAE,OAAO;IACdJ,cAAc,EACd;MACCC,QAAQ,EAAE,QAAQ;MAClBI,SAAS,EAAE,MAAM;MAAE;MACnBC,MAAM,EAAE,KAAK;MACbJ,QAAQ,EAAE;MACV;IACD,CAAC;;IACDM,UAAU,EAAE;MACVC,GAAG,EAAE;IACP;EACF,CAAC;EACDC,MAAM,EAAE;IACN,CAAC,EAAE;MAAEC,SAAS,EAAE;IAAW;EAC7B;AACA,CAAC;AAGD,SAASC,SAAS,GAAG;EAAA;EACjB,MAAM;IACJC,KAAK;IACLC,QAAQ;IACRC,QAAQ;IACRC,SAAS;IACTC,WAAW;IACXC;EACF,CAAC,GAAGtB,UAAU,CAACE,aAAa,CAAC;;EAG7B;EACA;EACA;EACA;;EAEA;;EAGA,MAAMqB,QAAQ,GAAG,CACf,CAAC,OAAO,EAAE,WAAW,EAAE,UAAU,CAAC,EAClC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EAED,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,KAAK,EAAEO,CAAC,EAAE,EAAC;IAC5B,MAAMC,IAAI,GAAG,EAAE;IACfA,IAAI,CAACC,IAAI,CAACF,CAAC,CAAC;IACZC,IAAI,CAACC,IAAI,CAACN,SAAS,CAACI,CAAC,CAAC,CAAC;IACvBC,IAAI,CAACC,IAAI,CAACP,QAAQ,CAACK,CAAC,CAAC,CAAC;IACtBD,QAAQ,CAACG,IAAI,CAACD,IAAI,CAAC;EACrB;;EAEA;;EAGA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eAEpB,QAAC,KAAK;MACJ,KAAK,EAAE,OAAQ;MACf,MAAM,EAAE,OAAQ;MAChB,SAAS,EAAC,WAAW;MACrB,MAAM,eAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB;MACjC,IAAI,EAAEF,QAAS;MACf,OAAO,EAAEpB,gBAAiB;MAC1B,SAAS,EAAE;QAAE,aAAa,EAAE;MAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAGZ;AAAC,GAnDQa,SAAS;AAAA,KAATA,SAAS;AAoDlB,eAAeA,SAAS;;AAExB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}