{"ast":null,"code":"var _jsxFileName = \"/Users/jding/awap-viewer-2023-1/awap-viewer-2023-main/my-app/src/components/GridBoard/RobotSquare.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { ViewerContext } from \"../../pages/Viewer\";\nimport \"./Grid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RobotSquare(props) {\n  _s();\n  const {\n    srcImg,\n    x,\n    y,\n    type,\n    hasRobot,\n    battery,\n    id\n  } = props;\n  const {\n    setCol,\n    setRow,\n    tiles\n  } = useContext(ViewerContext);\n  const [tiletype, setTileType] = useState(null);\n  const [tilevisib, setTileVisib] = useState(null);\n  const [robottype, setRobotType] = useState(null);\n  const handleHover = (col, row) => {\n    setCol(col);\n    setRow(row);\n    if (col != null && row != null) {\n      switch (tiles[row][col][0]) {\n        case \"I\":\n          setTileType(\"Type: Impassable\");\n          break;\n        case \"M\":\n          setTileType(\"Type: Metal\");\n          break;\n        default:\n          setTileType(\"Terr. No.: \" + tiles[row][col][0]);\n      }\n      switch (tiles[row][col][1]) {\n        case 0:\n          setTileVisib(\"None\");\n          break;\n        case 1:\n          setTileVisib(\"Red\");\n          break;\n        case 2:\n          setTileVisib(\"Blue\");\n          break;\n        default:\n          setTileVisib(\"Both\");\n      }\n    }\n    switch (type) {\n      case \"e\":\n        setRobotType(\"Explorer\");\n        break;\n      case \"m\":\n        setRobotType(\"Miner\");\n        break;\n      default:\n        setRobotType(\"Terraformer\");\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tile-div\",\n    children: hasRobot ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-square\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: `robot${x}${y}`,\n        src: srcImg,\n        alt: \"\",\n        className: \"grid-square\",\n        onMouseOver: () => {\n          handleHover(x, y);\n        },\n        onMouseOut: () => {\n          handleHover(null, null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltiptext\",\n        children: [\"Position: \", x, \", \", y, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 28\n        }, this), tiletype, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this), \"Visibility: \", tilevisib, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this), \"Robot: \", id, \", \", robottype, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this), \"Energy Level: \", battery, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: `robot${x}${y}`,\n      className: \"grid-square\",\n      onMouseOver: () => {\n        handleHover(x, y);\n      },\n      onMouseOut: () => {\n        handleHover(null, null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltiptext\",\n        children: [\"Position: (\", x, \", \", y, \") \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 30\n        }, this), tiletype, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 20\n        }, this), \"Visibility: \", tilevisib, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(RobotSquare, \"PL5yXoptpyOGjiac8FxUhFFIGw4=\");\n_c = RobotSquare;\nvar _c;\n$RefreshReg$(_c, \"RobotSquare\");","map":{"version":3,"names":["React","useContext","useState","ViewerContext","RobotSquare","props","srcImg","x","y","type","hasRobot","battery","id","setCol","setRow","tiles","tiletype","setTileType","tilevisib","setTileVisib","robottype","setRobotType","handleHover","col","row"],"sources":["/Users/jding/awap-viewer-2023-1/awap-viewer-2023-main/my-app/src/components/GridBoard/RobotSquare.js"],"sourcesContent":["import React, { useContext, useState} from \"react\"\nimport { ViewerContext } from \"../../pages/Viewer\"\nimport \"./Grid.css\"\n\nexport default function RobotSquare(props) {\n  const { srcImg, x, y, type, hasRobot, battery, id} = props\n  const { setCol, setRow, tiles} = useContext(ViewerContext)\n\n  const [tiletype, setTileType] = useState(null)\n  const [tilevisib, setTileVisib] = useState(null)\n  const [robottype, setRobotType] = useState(null)\n\n  const handleHover = (col, row) => {\n    setCol(col)\n    setRow(row)\n    if (col != null && row != null) {\n      switch(tiles[row][col][0]) {\n        case \"I\":\n          setTileType(\"Type: Impassable\")\n          break;\n        case \"M\":\n          setTileType(\"Type: Metal\")\n          break;\n        default:\n          setTileType(\"Terr. No.: \" + tiles[row][col][0])\n      }\n      switch(tiles[row][col][1]) {\n        case 0:\n          setTileVisib(\"None\")\n          break;\n        case 1:\n          setTileVisib(\"Red\")\n          break;\n        case 2:\n          setTileVisib(\"Blue\")\n          break;\n        default:\n          setTileVisib(\"Both\")\n      }\n    }\n    switch(type) {\n      case \"e\":\n        setRobotType(\"Explorer\")\n        break;\n      case \"m\":\n        setRobotType(\"Miner\")\n        break;\n      default:\n        setRobotType(\"Terraformer\")\n        break;\n    }\n  }\n\n  return (\n    <div className=\"tile-div\">\n      {hasRobot ? (\n        <div className=\"grid-square\">\n        <img\n          id={`robot${x}${y}`}\n          src={srcImg}\n          alt=\"\"\n          className=\"grid-square\"\n          onMouseOver={() => {\n            handleHover(x, y)\n          }}\n          onMouseOut={() => {\n            handleHover(null, null)\n          }}\n        />\n        <p className=\"tooltiptext\"> \n        Position: {x}, {y} <br></br>\n        {tiletype} <br></br>\n        Visibility: {tilevisib} <br></br>\n        Robot: {id}, {robottype} <br></br>\n        Energy Level: {battery} <br></br>\n        </p>\n        </div>\n      ) : (\n        <div\n          id={`robot${x}${y}`}\n          className=\"grid-square\"\n          onMouseOver={() => {\n            handleHover(x, y)\n          }}\n          onMouseOut={() => {\n            handleHover(null, null)\n          }}\n        >\n        <p className=\"tooltiptext\"> \n        Position: ({x}, {y}) <br></br>\n        {tiletype} <br></br>\n        Visibility: {tilevisib} <br></br>\n        </p></div>\n      )}\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}